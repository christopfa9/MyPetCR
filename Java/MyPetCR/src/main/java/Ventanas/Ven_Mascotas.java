/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ventanas;

import Auxiliares.Auxiliar;
import Conexiones.MascotasAccess;
import Enums.TipoUsuario;
import Objetos.GLOBAL;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class Ven_Mascotas extends javax.swing.JFrame {

    private int filasAfectadas;
    private ArrayList<ArrayList<String>> tabla = new ArrayList<>();
    private int idUsuario;
    private int idMascota;
    private String nombre;
    private int edad;
    private boolean Sexo;

    public Ven_Mascotas() {
        
        initComponents();
        changeVentana();
        this.setLocationRelativeTo(null);
        this.setVisible(true);

    }
    
    public void changeVentana() {
        if (GLOBAL.user.getTipo().equals(TipoUsuario.VETERINARIO)) {
            lblMascotas.setText("PACIENTES");
        } else {

            txtIdCliente.setEnabled(false);
            txtIdCliente.setText(GLOBAL.user.getID() + "");
        }
    }

    // MÃ©todo para actualizar la ventana
    private void updateWindow(String selectedProcess) {
        switch (selectedProcess) {
            case "Consultar Todos":
                pnlCRUD.setEnabled(false);
                break;
            case "Consultar uno":
                pnlCRUD.setEnabled(false);
                break;
            case "Insertar":
                pnlCRUD.setEnabled(true);
                break;
            case "Actualizar":
                pnlCRUD.setEnabled(true);
                break;
            case "Eliminar":
                pnlCRUD.setEnabled(false);
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMascotas = new javax.swing.JTable();
        PanelIngresarDatos = new javax.swing.JPanel();
        cmbProceso = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        btnAceptar = new java.awt.Button();
        jLabel19 = new javax.swing.JLabel();
        txtIdCliente = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtIdMascota = new javax.swing.JTextField();
        pnlCRUD = new java.awt.Panel();
        radFem1 = new javax.swing.JRadioButton();
        radMasc1 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtNombre1 = new javax.swing.JTextField();
        spinEdad1 = new javax.swing.JSpinner();
        pnlDivisor2 = new javax.swing.JPanel();
        lblTitulo = new java.awt.Label();
        btnInicio = new java.awt.Button();
        btnPerfil = new java.awt.Button();
        lblMascotas = new java.awt.Label();
        btnExpediente = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(77, 115, 129));

        jScrollPane1.setBackground(new java.awt.Color(153, 153, 153));

        tablaMascotas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tablaMascotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Mascota", "Nombre", "Edad", "Sexo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaMascotas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMascotasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaMascotas);

        PanelIngresarDatos.setBackground(new java.awt.Color(177, 189, 201));
        PanelIngresarDatos.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 255, 255), new java.awt.Color(51, 0, 204)));

        cmbProceso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Consultar Todos", "Consultar uno", "Insertar", "Actualizar", "Eliminar" }));
        cmbProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProcesoActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setText("Proceso:");

        btnAceptar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAceptar.setLabel("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtIdCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdClienteActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("ID Cliente:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("ID Mascota:");

        txtIdMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdMascotaActionPerformed(evt);
            }
        });

        pnlCRUD.setBackground(new java.awt.Color(177, 189, 201));
        pnlCRUD.setEnabled(false);

        radFem1.setText("F");
        radFem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radFem1ActionPerformed(evt);
            }
        });

        radMasc1.setText("M");
        radMasc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radMasc1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Nombre :");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Sexo:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("Edad:");

        txtNombre1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombre1ActionPerformed(evt);
            }
        });

        spinEdad1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinEdad1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        spinEdad1.setFocusable(false);
        spinEdad1.setVerifyInputWhenFocusTarget(false);
        spinEdad1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                spinEdad1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCRUDLayout = new javax.swing.GroupLayout(pnlCRUD);
        pnlCRUD.setLayout(pnlCRUDLayout);
        pnlCRUDLayout.setHorizontalGroup(
            pnlCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCRUDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCRUDLayout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(radFem1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(radMasc1))
                    .addGroup(pnlCRUDLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(txtNombre1))
                    .addGroup(pnlCRUDLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(spinEdad1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlCRUDLayout.setVerticalGroup(
            pnlCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCRUDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinEdad1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(radFem1)
                        .addComponent(radMasc1))
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelIngresarDatosLayout = new javax.swing.GroupLayout(PanelIngresarDatos);
        PanelIngresarDatos.setLayout(PanelIngresarDatosLayout);
        PanelIngresarDatosLayout.setHorizontalGroup(
            PanelIngresarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelIngresarDatosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
            .addGroup(PanelIngresarDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelIngresarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelIngresarDatosLayout.createSequentialGroup()
                        .addComponent(pnlCRUD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(PanelIngresarDatosLayout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelIngresarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel13)
                            .addComponent(jLabel11))
                        .addGap(43, 43, 43)
                        .addGroup(PanelIngresarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIdMascota)
                            .addComponent(txtIdCliente)
                            .addComponent(cmbProceso, 0, 145, Short.MAX_VALUE))
                        .addGap(10, 10, 10))))
        );
        PanelIngresarDatosLayout.setVerticalGroup(
            PanelIngresarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelIngresarDatosLayout.createSequentialGroup()
                .addGroup(PanelIngresarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelIngresarDatosLayout.createSequentialGroup()
                        .addContainerGap(46, Short.MAX_VALUE)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))
                    .addGroup(PanelIngresarDatosLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(PanelIngresarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PanelIngresarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbProceso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelIngresarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdMascota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(pnlCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pnlDivisor2.setBackground(new java.awt.Color(224, 123, 79));

        lblTitulo.setAlignment(java.awt.Label.CENTER);
        lblTitulo.setBackground(new java.awt.Color(26, 72, 91));
        lblTitulo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(224, 123, 79));
        lblTitulo.setText("MyPetCR");

        btnInicio.setLabel("Inicio");
        btnInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInicioActionPerformed(evt);
            }
        });

        btnPerfil.setActionCommand("Perfil");
        btnPerfil.setLabel("Perfil");
        btnPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerfilActionPerformed(evt);
            }
        });

        lblMascotas.setBackground(new java.awt.Color(224, 123, 79));
        lblMascotas.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        lblMascotas.setForeground(new java.awt.Color(26, 72, 91));
        lblMascotas.setText("MASCOTAS");

        javax.swing.GroupLayout pnlDivisor2Layout = new javax.swing.GroupLayout(pnlDivisor2);
        pnlDivisor2.setLayout(pnlDivisor2Layout);
        pnlDivisor2Layout.setHorizontalGroup(
            pnlDivisor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDivisor2Layout.createSequentialGroup()
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMascotas, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(btnPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        pnlDivisor2Layout.setVerticalGroup(
            pnlDivisor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlDivisor2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDivisor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPerfil, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(btnInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(lblMascotas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        btnExpediente.setBackground(new java.awt.Color(26, 72, 91));
        btnExpediente.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnExpediente.setForeground(new java.awt.Color(255, 102, 0));
        btnExpediente.setLabel("Expediente");
        btnExpediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpedienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelIngresarDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExpediente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6))
            .addComponent(pnlDivisor2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(pnlDivisor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(PanelIngresarDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnExpediente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProcesoActionPerformed
        // AquÃ­ va la lÃ³gica que quieres ejecutar cuando cambie la selecciÃ³n
        String selectedProcess = (String) cmbProceso.getSelectedItem();
        System.out.println("Selected process: " + selectedProcess);
        // Actualiza la ventana segÃºn la selecciÃ³n
        updateWindow(selectedProcess);
    }//GEN-LAST:event_cmbProcesoActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed

        int proceso = cmbProceso.getSelectedIndex();
        filasAfectadas = 0;

        if (proceso == 0) {// se consultan todas las Mascotas de ese cliente

            if (hayIdUsuario()) {

                tabla = MascotasAccess.getAllClientPets(idUsuario);

                if (!tabla.isEmpty()) {
                    Auxiliar.addTabla(tabla, tablaMascotas);
                }
            }

        } else if (proceso == 1) { //Consultar por una mascota en especifico

            if (hayIdMascota()) {

                tabla = MascotasAccess.getPet(idMascota);

                if (!tabla.isEmpty()) {
                    Auxiliar.addTabla(tabla, tablaMascotas);
                } else {
                    JOptionPane.showMessageDialog(null, "No se pudo encontrar", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else if (proceso == 2) { //Insertar una mascota
            if (getValores()) { //Obtener los valores de los textFields, etc;
                filasAfectadas = MascotasAccess.intsetPet(idUsuario, nombre, edad, Sexo);
                JOptionPane.showMessageDialog(null, "Se registro la mascota correctamente", "Informacion", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Debe Completar todos los datos para poder Ingresar", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (proceso == 3) { //Actualizar una mascota
            if (getValores()) { //Obtener los valores de los textFields, etc;
                filasAfectadas = MascotasAccess.updatePet(idMascota, nombre, edad, Sexo);
                JOptionPane.showMessageDialog(null, "Se registro el mascota Correctamente", "Informacion", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Debe Completar todos los datos para poder Actualizar", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (proceso == 4) { //Eliminar una mascota

            if (hayIdMascota()) {

                filasAfectadas = MascotasAccess.deletePet(idMascota);

                if (filasAfectadas != 0) {
                    JOptionPane.showMessageDialog(null, "Se Elimino el mascota Correctamente", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "No se pudo encontrar", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }


    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnExpedienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpedienteActionPerformed
        new Ven_IngresarExpediente(this);
    }//GEN-LAST:event_btnExpedienteActionPerformed

    private void txtIdClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdClienteActionPerformed

    private void btnInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInicioActionPerformed
        new Venta_Main();
        this.dispose();
    }//GEN-LAST:event_btnInicioActionPerformed

    private void txtIdMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdMascotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdMascotaActionPerformed

    private void radFem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radFem1ActionPerformed
        if (radMasc1.isSelected() == true) {
            radMasc1.setSelected(false);
        }
    }//GEN-LAST:event_radFem1ActionPerformed

    private void radMasc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radMasc1ActionPerformed
        if (radFem1.isSelected() == true) {
            radFem1.setSelected(false);
        }
    }//GEN-LAST:event_radMasc1ActionPerformed

    private void txtNombre1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombre1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombre1ActionPerformed

    private void spinEdad1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spinEdad1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_spinEdad1MouseClicked

    private void btnPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerfilActionPerformed
        new Ven_Perfil();
        this.dispose();
    }//GEN-LAST:event_btnPerfilActionPerformed

    private void tablaMascotasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMascotasMouseClicked
        
    }//GEN-LAST:event_tablaMascotasMouseClicked

    private boolean hayIdUsuario() {

        String IDUsuario = txtIdCliente.getText();

        if (IDUsuario.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un ID de Cliente", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            try {
                this.idUsuario = Integer.parseInt(txtIdCliente.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Debe ingresar un Numero de ID valido", "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }

        return true;
    }

    private boolean hayIdMascota() {

        String IDUsuario = txtIdMascota.getText();

        if (IDUsuario.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un ID de Mascota", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            try {
                this.idUsuario = Integer.parseInt(txtIdMascota.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Debe ingresar un Numero de ID valido", "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }

        return true;
    }

    private boolean getValores() {

        String IDUsuario = txtIdCliente.getText();

        if (IDUsuario.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un ID de Cliente", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            try {
                this.idUsuario = Integer.parseInt(txtIdCliente.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Debe ingresar un Numero de ID valido", "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }

        String idMascota = txtIdMascota.getText();

        if (idMascota.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un ID de Mascota", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            try {
                this.idMascota = Integer.parseInt(txtIdMascota.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Debe ingresar un Numero de ID valido", "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }

        this.nombre = txtNombre1.getText();

        if (nombre.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un Nombre", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        this.edad = Integer.parseInt(spinEdad1.getValue().toString());

        // Obtener fecha actual
        if (radFem1.isSelected()) {
            this.Sexo = true;
        } else {
            this.Sexo = false;
        }

        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelIngresarDatos;
    private java.awt.Button btnAceptar;
    private java.awt.Button btnExpediente;
    private java.awt.Button btnInicio;
    private java.awt.Button btnPerfil;
    private javax.swing.JComboBox<String> cmbProceso;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label lblMascotas;
    private java.awt.Label lblTitulo;
    private java.awt.Panel pnlCRUD;
    private javax.swing.JPanel pnlDivisor2;
    private javax.swing.JRadioButton radFem1;
    private javax.swing.JRadioButton radMasc1;
    private javax.swing.JSpinner spinEdad1;
    private javax.swing.JTable tablaMascotas;
    private javax.swing.JTextField txtIdCliente;
    private javax.swing.JTextField txtIdMascota;
    private javax.swing.JTextField txtNombre1;
    // End of variables declaration//GEN-END:variables
}
